{
  "_from": "tag-cloud@^1.1.4",
  "_id": "tag-cloud@1.1.4",
  "_inBundle": false,
  "_integrity": "sha1-XEZhwPXycXbYbkwEXpgzQa7tXXw=",
  "_location": "/tag-cloud",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "tag-cloud",
    "fetchSpec": "^1.1.4",
    "name": "tag-cloud",
    "raw": "tag-cloud@^1.1.4",
    "rawSpec": "^1.1.4",
    "registry": true,
    "saveSpec": null,
    "type": "range"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/tag-cloud/-/tag-cloud-1.1.4.tgz",
  "_shasum": "5c4661c0f5f27176d86e4c045e983341aeed5d7c",
  "_shrinkwrap": null,
  "_spec": "tag-cloud@^1.1.4",
  "_where": "/home/jose/CPPG",
  "author": {
    "name": "mrodrig"
  },
  "bugs": {
    "url": "https://github.com/mrodrig/tag-cloud/issues"
  },
  "bundleDependencies": false,
  "dependencies": {
    "underscore": "1.8.3"
  },
  "deprecated": false,
  "description": "Node Tag Cloud HTML Generator",
  "devDependencies": {
    "async": "2.5.0",
    "mocha": "3.3.0",
    "should": "13.1.2"
  },
  "engines": {
    "node": "*"
  },
  "homepage": "https://github.com/mrodrig/tag-cloud#readme",
  "keywords": [
    "cloud",
    "dom",
    "generator",
    "html",
    "tag",
    "tag cloud",
    "tagCloud",
    "text",
    "word",
    "word cloud",
    "wordCloud"
  ],
  "license": "MIT",
  "main": "./lib/tagCloud.js",
  "name": "tag-cloud",
  "optionalDependencies": {},
  "readme": "# Node Tag Cloud HTML Generator\n\n[![Build Status](https://travis-ci.org/mrodrig/tag-cloud.svg?branch=master)](https://travis-ci.org/mrodrig/tag-cloud)\n[![bitHound Dependencies](https://www.bithound.io/github/mrodrig/tag-cloud/badges/dependencies.svg)](https://www.bithound.io/github/mrodrig/tag-cloud/master/dependencies/npm)\n[![Downloads](http://img.shields.io/npm/dm/tag-cloud.svg)](https://www.npmjs.org/package/tag-cloud)\n[![NPM version](https://img.shields.io/npm/v/tag-cloud.svg)](https://www.npmjs.org/package/tag-cloud)\n[![bitHound Score](https://www.bithound.io/github/mrodrig/tag-cloud/badges/score.svg)](https://www.bithound.io/github/mrodrig/tag-cloud)\n\nThis node module will take an array of tags and counts and generate a Tag/Word Cloud.\n\n## Installation\n\n```bash\n$ npm install tag-cloud\n```\n\n## Usage\n\n```javascript\nvar tagCloud = require('tag-cloud');\n```\n\n### API\n\n#### tagCloud(array, callback, options)\n\n* `array` - An array of JSON documents of the form {tagName: <String>, count: <Number>}\n* `callback` - A function of the form `function (err, html)`; This function will receive any errors and/or the HTML generated.\n* `options` - (Optional) A JSON document specifying any of the following fields:\n  * `randomize` - Boolean - Indicates whether the tags should be shuffled before the Tag Cloud is generated. [Default: true]\n  * `numBuckets` - Number - Number of buckets to utilize [Default: 10]\n  * `htmlTag` - String - The HTML tag name (ie. 'span') that you would like to be used. [Default: 'span']\n  * `classPrefix` - String - Class prefix for the tag classes that are generated [Default: 'bucket']\n  * `replacements` - Array - An array of Documents which represent replacements that should occur on attributes.\n    * Each document should be of the form: `{ find: 'valueToBeReplaced', replace: 'valueToBeInserted' }`\n    * This allows additional custom values to be inserted into attributes for further customization (ie. specifying conditional filters in URLs)\n  * `additionalAttributes` - Document - A JSON document specifying any additional values that you would like to be added to the tag's HTML as an attribute [Default: {}]\n    * If you would like to customize one of the fields to include the tag's text in the value, just use {{tag}} which will be replaced by the actual tag.\n        * Example: ```{href: 'http://google.com?q={{tag}}'}```\n    * If your tags include special characters (ie. C#) and you need to use the tag in a URL, then you can specify the value as an Object\n        * Example: ```{ href : { encode : true, value: 'http://google.com?q={{tag}}' } } ```\n\n##### tagCloud Example:\n\n```javascript\n\nvar tagCloud = require('tag-cloud');\n\nvar tags = [\n    {tagName: 'js', count: 5},\n    {tagName: 'css', count: 9},\n    {tagName: 'less', count: 13},\n    {tagName: 'rest', count: 2}\n];\n\n\n/* Option 1 */\ntagCloud.tagCloud(tags, function (err, data) {\n    console.log(err, data);\n});\n\n/* Option 2 */\ntagCloud.tagCloud(tags, function (err, data) {\n    console.log(err, data);\n}, {\n    randomize: false\n});\n\nvar promise = require('bluebird');\npromise.promisifyAll(tagCloud);\n\n/* Option 3 */\ntagCloud.tagCloudAsync(tags)\n    .then( function (html) {\n        console.log(html);\n    })\n    .catch( function (err) {\n        console.log(err);\n    });\n\n/* Option 4 */\ntagCloud.tagCloudAsync(tags, {\n    randomize: false\n})\n    .then( function (html) {\n        console.log(html);\n    })\n    .catch( function (err) {\n        console.log(err);\n    });\n```\n\nOptions 1 and 2 above both print out:\n\n```html\nnull '<span class=\"bucket2\" >js</span><span class=\"bucket4\" >css</span><span class=\"bucket6\" >less</span><span class=\"bucket0\" >rest</span>'\n```\n\nOptions 3 and 4 above both print out:\n\n```html\n<span class=\"bucket2\" >js</span><span class=\"bucket4\" >css</span><span class=\"bucket6\" >less</span><span class=\"bucket0\" >rest</span>\n```\n\nThe HTML can then be styled with CSS as such:\n\n```css\n.bucket1 {\n  color: red;\n}\n\n.bucket2 {\n  color: blue;\n}\n\n.bucket3 {\n  color: yellow;\n}\n```\n\n## Example\n\nYour tag cloud can be styled to look like this:\n![Tag Cloud Example](https://raw.githubusercontent.com/mrodrig/tag-cloud/master/demo/example.png)\n\nTo see the HTML and CSS used to create this, please look at the [demo](https://github.com/mrodrig/tag-cloud/tree/master/demo).\n\n## Tests\n\n```bash\n$ npm test\n```\n\n_Note_: This requires `mocha`, `should`, `async`, and `underscore`.\n\n## Features\n\n- HTML Tag Cloud Generation\n- Customizable HTML Classes\n- Ability to add additional attributes to each HTML entity created\n- Randomization to keep the tag cloud interesting\n- Classes of the form 'bucket1' to allow for easy CSS styling and customization\n- Ability to serve the generated HTML out via a route\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/mrodrig/tag-cloud.git"
  },
  "scripts": {
    "test": "mocha --reporter spec"
  },
  "version": "1.1.4"
}
